{"mappings":"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","sources":["public/js/contract.js"],"sourcesContent":["$(document).ready(function () {\n  //same as: $(function() {\n  connectMetamask();\n});\n\nconst connectMetamask = async () => {\n  const connectButton = document.getElementById(\"metbtn\");\n  if (!!window.ethereum) {\n    const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n    console.log(accounts);\n    account = accounts[0];\n    localStorage.setItem(\"account_address\", account);\n    //console.log(localStorage.getItem('account_'));\n    accountArea = document.getElementById(\"accountArea\");\n    connectButton.style.visibility = \"hidden\";\n    accountArea.innerHTML = `Logged in with Account: ${localStorage.getItem(\n      \"account_address\"\n    )}`;\n    localStorage.setItem(\"loggedAccount\", account);\n    connectToContract();\n  } else {\n    console.log(\"install metamask\");\n    connectButton.textContent = \"You need to install Metamask first\";\n  }\n};\nconst connectToContract = async () => {\n  const ABI = [\n    {\n      constant: true,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      name: \"userAccount\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      name: \"userExists\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [],\n      name: \"createAcc\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      payable: true,\n      stateMutability: \"payable\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [],\n      name: \"deposit\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      payable: true,\n      stateMutability: \"payable\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"withdraw\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      payable: true,\n      stateMutability: \"payable\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address payable\",\n          name: \"userAddress\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"TransferAmount\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      constant: false,\n      inputs: [\n        {\n          internalType: \"address payable\",\n          name: \"toAddress\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"sendAmount\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      payable: true,\n      stateMutability: \"payable\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"userAccountBalance\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: \"accountExist\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      payable: false,\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n  ];\n  const Address = \"a0097Af1eD7D788dCd688Ccb14741ddEf7BF9839\";\n  window.web3 = await new Web3(window.ethereum);\n  window.contract = await new window.web3.eth.Contract(ABI, Address);\n  //sessionStorage.setItem('cont',JSON.stringify(contract.methods));\n  //document.getElementById(\"contractArea\").innerHTML = \"Connected to Contract\"; // calling the elementID above\n  getUserAccountBalance();\n  getContractAccount();\n};\nconst getContractAccount = async () => {\n  const data = await window.contract.methods.createAcc().call();\n  console.log(data);\n  //document.getElementById(\"contractAccount\").innerHTML = `Contract Account: ${data}`;\n};\nconst getUserAccountBalance = async () => {\n  var balanceInWei;\n  await window.web3.eth\n    .getBalance(localStorage.getItem(\"loggedAccount\"))\n    .then(function (response) {\n      console.log(response);\n      balanceInWei = response;\n    });\n  console.log(balanceInWei);\n  //const balance = await window.contract.methods.userAccountBalance().call();\n  const etherValue = window.web3.utils.fromWei(String(balanceInWei), \"ether\");\n  localStorage.setItem(\"ethereumBalance\", parseFloat(etherValue).toFixed(4));\n  document.getElementById(\n    \"balanceArea\"\n  ).innerHTML = `Current Balance: ${parseFloat(etherValue).toFixed(\n    4\n  )} Ethereum`;\n  console.log(parseFloat(etherValue).toFixed(4));\n};\nconst accountExist = async () => {\n  return await window.web3.eth.accountExist().call();\n};\nconst transferAmount = async () => {\n  const amount = document.getElementById(\"amount\").value;\n  const address = document.getElementById(\"address\").value;\n  console.log(amount, address);\n  await window.contract.methods\n    .sendAmount(address, amount)\n    .send({ from: account });\n};\n\nconst depositAmount = async () => {\n  const amount = document.getElementById(\"amount\").value;\n  console.log(localStorage.getItem(\"cont\").methods);\n  console.log(amount);\n};\n\nfunction generateLink() {\n  url = `https://sepolia.etherscan.io/address/${localStorage.getItem(\n    \"account_address\"\n  )}`;\n  window.open(url);\n}\n"],"names":[],"version":3,"file":"index.491f42e7.js.map","sourceRoot":"/__parcel_source_root/"}